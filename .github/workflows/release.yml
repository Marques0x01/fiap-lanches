# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  
env:
  TF_ACTION_WORKING_DIR: "infra"
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  workflow_dispatch:

jobs:

  fiap-lanches-testes:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: npm install
        run: |
          cd fiap-lanches-clean
          cd app
          npm install
      
      - name: npm run test
        run: |
          cd fiap-lanches-clean
          cd app
          npm run test
  
  create-ecr-fiap-lanches:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: "${{ secrets.TF_TOKEN_API }}"

      - name: Terraform Init
        run: |
          cd infra-ecr
          terraform init

      - name: Terraform Plan
        run: |
          cd infra-ecr
          terraform plan

      - name: Terraform Apply
        run: |
          cd infra-ecr
          terraform apply -auto-approve -input=false
      
  publish-image-fiap-lanches:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4 # More information on this action can be found below in the 'AWS Credentials' section
        with:
          aws-region: us-east-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    
      - name: Login to Amazon ECR Private
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Delete image
        run: aws ecr batch-delete-image --repository-name fiap-lanches --image-ids imageTag=latest

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: fiap-lanches
        run: |
          cd fiap-lanches-clean
          cd app
          docker build -t $REGISTRY/$REPOSITORY:latest .
          docker push $REGISTRY/$REPOSITORY:latest

  helm-fiap-lanches:
    permissions:
      contents: write
    
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          repository: Marques0x01/fiap-lanches-helm
          ref: gh-pages  # Ou outra branch

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4 # More information on this action can be found below in the 'AWS Credentials' section
        with:
          aws-region: us-east-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Delete helm
        run: aws ecr batch-delete-image --repository-name fiap-lanches --image-ids imageTag=0.3.0   
  
      - name: Package and push helm chart to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          helm package ./
          helm push fiap-lanches-0.3.0.tgz oci://$REGISTRY

  terraform-eks-fiap-lanches:
    runs-on: ubuntu-latest

    steps:
      
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          repository: Marques0x01/fiap_eks_cluster
          ref: main 

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: "${{ secrets.TF_TOKEN_API }}"

      - name: Terraform Init
        run: terraform init
  
      - name: Terraform Plan
        run: terraform plan
  
      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false

  Build-fiap-lambda:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          repository: Marques0x01/fiap_lambda_auth
          ref: main  # Ou outra branch

      - name: Install dependencies
        run: |
          cd app
          npm install

  Tests-fiap-lambda-auth:
    needs: Build-fiap-lambda
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          repository: Marques0x01/fiap_lambda_auth
          ref: main  # Ou outra branch

      - name: Install dependencies
        run: |
          cd app
          npm install

      - name: Run tests
        run: |
          cd app
          npm test

  Publish-fiap-lambda-auth:
    needs: Tests-fiap-lambda-auth
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          repository: Marques0x01/fiap_lambda_auth
          ref: main 

      - name: Install dependencies
        run: |
          cd app
          npm install

      - name: Terraform init
        run: |
          cd infra
          terraform init

      - name: Terraform plan
        run: |
          cd infra
          terraform plan

      - name: Terraform apply
        run: |
          cd infra
          terraform apply -auto-approve

  Publish-fiap-api-gateway:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          repository: Marques0x01/fiap_api_gateway
          ref: main  # Ou outra branch

      - name: Terraform init
        run: |
          cd infra
          terraform init

      - name: Terraform validate
        run: |
          cd infra
          terraform validate

      - name: Terraform plan
        run: |
          cd infra
          terraform plan

      - name: Terraform apply
        run: |
          cd infra
          terraform apply -auto-approve
